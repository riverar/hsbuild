<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <DefaultLanguageSourceExtension>.c</DefaultLanguageSourceExtension>
    <Language>C</Language>
  </PropertyGroup>

  <PropertyGroup>
    <BuildCompileTargets>
      $(BuildCompileTargets);
      CCompile;
      ResourceCompile;
      TransformObjOutput;
      ManifestResourceCompile;
      BuildLink;
    </BuildCompileTargets>

    <BuildLinkTargets>
      $(BuildLinkTargets);
      GenerateSymbols;
      Lib;
      Link;
      Manifest;
      LinkEmbedManifest;
    </BuildLinkTargets>

    <BuildInstallTargets>
      $(BuildInstallTargets);
      InstallHeaders;
    </BuildInstallTargets>
  </PropertyGroup>

  <!-- Target initialization        - Can NOT be overridden       -->
  <PropertyGroup Condition=" '$(OutputType)' == 'exe' or '$(OutputType)' == 'winexe' ">
      <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(OutputType)' == 'dll' ">
      <TargetExt>.dll</TargetExt>
      <TargetSuffix Condition=" '$(Configuration)' == 'Debug' "   >-$(CRTSuffix)d</TargetSuffix>
      <TargetSuffix Condition=" '$(Configuration)' == 'Release' " >-$(CRTSuffix)</TargetSuffix>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(OutputType)' == 'lib' ">
      <TargetExt>.lib</TargetExt>
      <TargetSubDir Condition=" '$(TargetSubDir)' == '' ">$(LibraryOutputSubDir)</TargetSubDir>
  </PropertyGroup>

  <PropertyGroup>
      <TargetName>$(AssemblyName)$(TargetSuffix)</TargetName>
      <TargetFileName>$(TargetName)$(TargetExt)</TargetFileName>
      <TargetSubDir Condition=" '$(TargetSubDir)' == '' ">$(BinaryOutputSubDir)</TargetSubDir>
      <TargetSubDir Condition=" '$(TargetSubDir)' != '' and !HasTrailingSlash('$(TargetSubDir)') ">$(TargetSubDir)/</TargetSubDir>
      <TargetDir>$(OutDir)$(TargetSubDir)</TargetDir>
      <TargetPath>$(TargetDir)$(TargetFileName)</TargetPath>
      <OutputFile Condition=" '$(OutputFile)' == '' ">$(TargetPath)</OutputFile>
  </PropertyGroup>

  <Import Project="HSBuild.Common.targets" />
  <Import Project="Platform/Toolset/HSBuild.C.$(Platform).$(PlatformToolset).targets" />
  <UsingTask  TaskName="SetEnv"                     AssemblyFile="$(HSBuildTasksPath)" />

  <PropertyGroup>
      <BuildLinkDependsOn>
          BeforeBuildLink;
          $(BuildLinkTargets);
          AfterBuildLink
      </BuildLinkDependsOn>
  </PropertyGroup>
  <Target
    Name="BuildLink"
    DependsOnTargets="$(BuildLinkDependsOn)"
    />
  <Target Name="BeforeBuildLink" />
  <Target Name="AfterBuildLink" />

  <!-- TARGET: SetBuildDefaultEnvironmentVariables -->
  <Target
    Name="SetBuildDefaultEnvironmentVariables"
    >
      <SetEnv
        Name   ="PATH"
        Value  ="$(ExecutablePath)"
        >
          <Output TaskParameter="OutputEnvironmentVariable" PropertyName="Path"/>
      </SetEnv>

      <SetEnv
        Name   ="LIB"
        Value  ="$(LibraryPath)"
        >
          <Output TaskParameter="OutputEnvironmentVariable" PropertyName="LIB"/>
      </SetEnv>

      <SetEnv
        Name   ="LIBPATH"
        Value  ="$(ReferencePath)"
        >
          <Output TaskParameter="OutputEnvironmentVariable" PropertyName="LIBPATH"/>
      </SetEnv>

      <SetEnv
        Name   ="INCLUDE"
        Value  ="$(IncludePath)"
        >
          <Output TaskParameter="OutputEnvironmentVariable" PropertyName="INCLUDE"/>
      </SetEnv>
  </Target>

  <!-- TARGET: GenerateSymbols -->
  <Target
    Name="GenerateSymbols"
    Condition=" '@(SymbolFile)' != '' "
    >
      <ItemGroup>
        <_SymbolFileMissingOutputFile Include="@(SymbolFile)" Condition=" '%(SymbolFile.OutputFile)' == '' " />
      </ItemGroup>

      <PropertyGroup Condition=" '@(SymbolFile)' != '' ">
        <SymbolFileGenModuleDefFile>$(IntDir)$(AssemblyName).def</SymbolFileGenModuleDefFile>
      </PropertyGroup>

      <ItemGroup>
        <SymbolFile>
          <OutputFile Condition=" '%(SymbolFile.OutputFile)' == '' ">$(SymbolFileGenModuleDefFile)</OutputFile>
        </SymbolFile>
      </ItemGroup>

      <Aggregator
        SourceFiles="@(SymbolFile)"
        OutputFile="%(SymbolFile.OutputFile)"
        HeadLines="EXPORTS"
        />

      <ItemGroup>
        <FileWrites Include="%(SymbolFile.OutputFile)" />
      </ItemGroup>
  </Target>

  <!-- TARGET: Install C Headers -->
  <Target
    Name="_CheckClIncludeForInstall"
    Condition=" '@(ClInclude)' != '' "
    >
      <ItemGroup>
          <InstallInclude Include="@(ClInclude)" Condition=" '%(ClInclude.Install)' != '' ">
            <SubDirectory>%(ClInclude.SubDirectory)</SubDirectory>
          </InstallInclude>
      </ItemGroup>
  </Target>

  <Target
    Name="InstallHeaders"
    Condition=" '@(InstallInclude)' != '' "
    DependsOnTargets="_CheckClIncludeForInstall"
    >
      <MakeDir Directories="$(IncludeOutputPath)" />

      <!-- Copy all installable header files. -->
      <Copy
        SourceFiles="@(InstallInclude)"
        DestinationFolder="$(IncludeOutputPath)%(InstallInclude.SubDirectory)"
        SkipUnchangedFiles="true"
        OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)">
          <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
      </Copy>
  </Target>

</Project>
