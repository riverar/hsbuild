/* rest-extras-0.6.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Rest", lower_case_cprefix = "rest_")]
namespace Rest {
	[CCode (cname = "FacebookProxy", cheader_filename = "rest-extras/facebook-proxy.h")]
	public class FacebookProxy : Rest.Proxy {
		[CCode (cname = "facebook_proxy_new", type = "RestProxy*", has_construct_function = false)]
		public FacebookProxy (string api_key, string app_secret);
		[CCode (cname = "facebook_proxy_build_login_url")]
		public unowned string build_login_url (string frob);
		[CCode (cname = "facebook_proxy_build_permission_url")]
		public unowned string build_permission_url (string perms);
		[CCode (cname = "facebook_proxy_get_api_key")]
		public unowned string get_api_key ();
		[CCode (cname = "facebook_proxy_get_app_secret")]
		public unowned string get_app_secret ();
		[CCode (cname = "facebook_proxy_get_session_key")]
		public unowned string get_session_key ();
		[CCode (cname = "facebook_proxy_set_app_secret")]
		public void set_app_secret (string secret);
		[CCode (cname = "facebook_proxy_set_session_key")]
		public void set_session_key (string session_key);
		[CCode (cname = "facebook_proxy_sign")]
		public unowned string sign (GLib.HashTable @params);
		[CCode (cname = "facebook_proxy_new_with_session", type = "RestProxy*", has_construct_function = false)]
		public FacebookProxy.with_session (string api_key, string app_secret, string session_key);
	}
	[Compact]
	[CCode (free_function = "rest_proxy_call_free", cname = "FacebookProxyCall", cheader_filename = "rest-extras/facebook-proxy-call.h")]
	public class FacebookProxyCall : Rest.ProxyCall {
	}
	[CCode (cname = "FlickrProxy", cheader_filename = "rest-extras/flickr-proxy.h")]
	public class FlickrProxy : Rest.Proxy {
		[CCode (cname = "flickr_proxy_new", type = "RestProxy*", has_construct_function = false)]
		public FlickrProxy (string api_key, string shared_secret);
		[CCode (cname = "flickr_proxy_build_login_url")]
		public unowned string build_login_url (string frob);
		[CCode (cname = "flickr_proxy_get_api_key")]
		public unowned string get_api_key ();
		[CCode (cname = "flickr_proxy_get_shared_secret")]
		public unowned string get_shared_secret ();
		[CCode (cname = "flickr_proxy_get_token")]
		public unowned string get_token ();
		[CCode (cname = "flickr_proxy_is_successful")]
		public static bool is_successful (Rest.XmlNode root) throws GLib.Error;
		[CCode (cname = "flickr_proxy_set_token")]
		public void set_token (string token);
		[CCode (cname = "flickr_proxy_sign")]
		public unowned string sign (GLib.HashTable @params);
		[CCode (cname = "flickr_proxy_new_with_token", type = "RestProxy*", has_construct_function = false)]
		public FlickrProxy.with_token (string api_key, string shared_secret, string token);
	}
	[Compact]
	[CCode (free_function = "rest_proxy_call_free", cname = "FlickrProxyCall", cheader_filename = "rest-extras/flickr-proxy-call.h")]
	public class FlickrProxyCall : Rest.ProxyCall {
	}
}
